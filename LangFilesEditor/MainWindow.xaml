<Window x:Class="LangFilesEditor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:LangFilesEditor"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:structure="clr-namespace:LangFilesEditor.Structure"
        Title="MainWindow"
        Width="1200"
        Height="800"
        d:DataContext="{d:DesignInstance local:MainContext}"
        WindowStartupLocation="CenterScreen"
        WindowState="Maximized"
        mc:Ignorable="d">
    <Window.Resources>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="4" />
            <Setter Property="Padding" Value="8 4" />
        </Style>

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    </Window.Resources>
    <TabControl>
        <TabItem Header="Editor">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <!-- CONTENT -->
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <!-- NODES -->
                    <ListBox Grid.Row="0"
                             Grid.RowSpan="2"
                             Grid.Column="0"
                             Margin="4"
                             ItemsSource="{Binding Path=Nodes}"
                             SelectedItem="{Binding Path=SelectedNode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             SelectionMode="Single">
                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type structure:Node}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Viewbox Width="16"
                                             Height="16"
                                             Margin="0 0 4 0"
                                             Visibility="{Binding Path=HasIncorrectData, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Canvas Width="24"
                                                Height="24">
                                            <Path Data="M11,15H13V17H11V15M11,7H13V13H11V7M12,2C6.47,2 2,6.5 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20Z"
                                                  Fill="Red" />
                                        </Canvas>
                                    </Viewbox>
                                    <TextBlock Grid.Column="1"
                                               Text="{Binding Path=Name}" />
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>

                    <!-- SEARCH -->
                    <Grid Grid.Row="0"
                          Grid.Column="1"
                          Visibility="{Binding Path=IsVisibleSelectedNodeContent, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0"
                                   Margin="4"
                                   VerticalAlignment="Center"
                                   Text="Search:" />

                        <TextBox Grid.Column="1"
                                 Margin="4"
                                 HorizontalAlignment="Stretch"
                                 Text="{Binding Path=SelectedNode.SearchString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                        <TextBlock Grid.Column="2"
                                   Margin="4"
                                   VerticalAlignment="Center"
                                   FontWeight="SemiBold"
                                   Foreground="DarkOrange"
                                   Text="Has duplicate values!"
                                   Visibility="{Binding Path=SelectedNode.HasItemsWithSameValue, Converter={StaticResource BooleanToVisibilityConverter}}" />

                        <Button Grid.Column="3"
                                Command="{Binding Path=SelectedNode.SearchWithDuplicateNamesOrValuesCommand}"
                                Content="Search them"
                                Visibility="{Binding Path=SelectedNode.HasItemsWithSameValue, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    </Grid>

                    <!-- EDITORS -->
                    <TabControl Name="TcEditors"
                                Grid.Row="1"
                                Grid.Column="1"
                                local:TabControlExtensions.EnableContentCaching="True"
                                ItemsSource="{Binding Path=EditNodes}"
                                SelectedItem="{Binding Path=SelectedNode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <TabControl.ItemTemplate>
                            <DataTemplate DataType="{x:Type structure:Node}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Column="0"
                                               VerticalAlignment="Center"
                                               Text="{Binding Path=Name}" />

                                    <Button Grid.Column="1"
                                            MinWidth="0"
                                            MinHeight="0"
                                            Margin="4 0 0 0"
                                            Padding="0"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Background="Transparent"
                                            BorderThickness="0"
                                            Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=DataContext.CloseEditorTabCommand}">
                                        <Button.Style>
                                            <Style TargetType="Button">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TabItem}, Path=IsSelected}"
                                                                 Value="True">
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                        <Viewbox Width="16"
                                                 Height="16">
                                            <Canvas Width="24"
                                                    Height="24">
                                                <Path Data="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z"
                                                      Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}" />
                                            </Canvas>
                                        </Viewbox>
                                    </Button>
                                </Grid>
                            </DataTemplate>
                        </TabControl.ItemTemplate>

                        <TabControl.ContentTemplate>
                            <DataTemplate DataType="{x:Type structure:Node}">
                                <DataGrid x:Name="PART_DataGrid"
                                          Margin="4"
                                          AutoGenerateColumns="False"
                                          BeginningEdit="DgItems_OnBeginningEdit"
                                          CanUserAddRows="False"
                                          CanUserDeleteRows="False"
                                          CurrentCellChanged="DgItems_OnCurrentCellChanged"
                                          DataGridCell.Selected="DgItems_OnSelected"
                                          EnableColumnVirtualization="True"
                                          EnableRowVirtualization="True"
                                          HorizontalScrollBarVisibility="Disabled"
                                          ItemsSource="{Binding Path=.Items}"
                                          Loaded="DgItems_OnLoaded"
                                          PreparingCellForEdit="DgItems_OnPreparingCellForEdit"
                                          ScrollViewer.CanContentScroll="True"
                                          SelectionMode="Single"
                                          VirtualizingPanel.IsVirtualizing="True"
                                          VirtualizingPanel.VirtualizationMode="Recycling">

                                    <DataGrid.RowStyle>
                                        <Style TargetType="{x:Type DataGridRow}">
                                            <Setter Property="Visibility" Value="{Binding Path=IsVisible, Converter={StaticResource BooleanToVisibilityConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <Setter Property="Background" Value="{Binding Path=BackgroundColor}" />
                                        </Style>
                                    </DataGrid.RowStyle>

                                    <DataGrid.Resources>
                                        <Style TargetType="{x:Type DataGridColumnHeader}">
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                            <Setter Property="ContentTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding}"
                                                                   TextAlignment="Center"
                                                                   TextWrapping="Wrap" />
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                                                         Color="#C9E9FF" />
                                        <DataTemplate x:Key="ItemNameCellTemplate"
                                                      DataType="{x:Type structure:Item}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <Viewbox Grid.Column="0"
                                                         Width="16"
                                                         Height="16"
                                                         Margin="0 0 4 0"
                                                         Visibility="{Binding Path=IsVisibleError, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                    <Canvas Width="24"
                                                            Height="24">
                                                        <Path Data="M11,15H13V17H11V15M11,7H13V13H11V7M12,2C6.47,2 2,6.5 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20Z"
                                                              Fill="Red" />
                                                    </Canvas>
                                                </Viewbox>
                                                <Viewbox Grid.Column="1"
                                                         Width="16"
                                                         Height="16"
                                                         Margin="0 0 4 0"
                                                         Visibility="{Binding Path=IsVisibleWarning, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                    <Canvas Width="24"
                                                            Height="24">
                                                        <Path Data="M11,15H13V17H11V15M11,7H13V13H11V7M12,2C6.47,2 2,6.5 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20Z"
                                                              Fill="DarkOrange" />
                                                    </Canvas>
                                                </Viewbox>
                                                <TextBox Grid.Column="2"
                                                         MinWidth="20"
                                                         Margin="0"
                                                         Background="Transparent"
                                                         BorderThickness="0"
                                                         Text="{Binding Path=Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            </Grid>
                                        </DataTemplate>
                                        <DataTemplate x:Key="ItemValueCellTemplate"
                                                      DataType="{x:Type structure:Item}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <TextBox Grid.Column="0"
                                                         Margin="0"
                                                         AcceptsReturn="True"
                                                         Background="Transparent"
                                                         BorderThickness="0"
                                                         Text="{DynamicResource PLACEHOLDER}"
                                                         TextWrapping="Wrap" />

                                                <!--
                                                    ТУТ МОЖНО ДОБАВИТЬ ПОЛЕЗНЫЕ КНОПКИ, НО
                                                    ПОКА Я НЕ ПРИДУМАЛ КАКИЕ
                                                -->

                                            </Grid>
                                        </DataTemplate>
                                    </DataGrid.Resources>
                                    <DataGrid.Columns>
                                        <!-- TAG -->
                                        <DataGridTemplateColumn Width="Auto"
                                                                CellTemplate="{StaticResource ItemNameCellTemplate}" />
                                    </DataGrid.Columns>
                                </DataGrid>
                            </DataTemplate>
                        </TabControl.ContentTemplate>
                    </TabControl>

                    <!-- ITEM CONTROLS -->
                    <StackPanel Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="2"
                                VerticalAlignment="Top"
                                Orientation="Vertical"
                                Visibility="{Binding Path=IsVisibleSelectedNodeContent, Converter={StaticResource BooleanToVisibilityConverter}}">

                        <!-- ADD ROW ABOVE -->
                        <Button Command="{Binding Path=AddRowAboveCommand}"
                                Content="Add row above" />

                        <!-- ADD ROW BELOW -->
                        <Button Command="{Binding Path=AddRowBelowCommand}"
                                Content="Add row below" />

                        <!-- IMPORT ROWS BELOW -->
                        <Button Command="{Binding Path=ImportRowsBelowCommand}"
                                Content="Import rows below" />

                        <!-- IMPORT ROWS AUTO -->
                        <Button Command="{Binding Path=ImportRowsAutoCommand}"
                                Content="Import rows auto" />

                        <Border Margin="0 4"
                                HorizontalAlignment="Stretch"
                                BorderBrush="Gray"
                                BorderThickness="0 1 0 0"
                                SnapsToDevicePixels="True" />

                        <!-- COPY -->
                        <Button Command="{Binding Path=CopyToClipboardCommand}"
                                Content="Copy" />

                        <!-- PASTE -->
                        <Button Command="{Binding Path=PasteFromClipboard}"
                                Content="Paste" />

                        <Border Margin="0 4"
                                HorizontalAlignment="Stretch"
                                BorderBrush="Gray"
                                BorderThickness="0 1 0 0"
                                SnapsToDevicePixels="True" />

                        <!-- MARK FOR DELETION -->
                        <Button Command="{Binding Path=MarkForDeletionCommand}"
                                Content="Mark for deletion" />

                        <Border Margin="0 4"
                                HorizontalAlignment="Stretch"
                                BorderBrush="Gray"
                                BorderThickness="0 1 0 0"
                                SnapsToDevicePixels="True" />

                        <!-- REMOVE -->
                        <Button Command="{Binding Path=RemoveItemCommand}"
                                Content="Remove" />
                    </StackPanel>
                </Grid>

                <!-- BOTTOM CONTROLS -->
                <Button Grid.Row="2"
                        HorizontalAlignment="Center"
                        Command="{Binding Path=CloseWithoutSaveCommand}"
                        Content="Close without save" />
            </Grid>
        </TabItem>
        <TabItem Header="Merger">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <!-- CONTROLS -->
                <StackPanel Grid.Row="0"
                            HorizontalAlignment="Left"
                            Orientation="Horizontal">

                    <!-- LOCAL VERSION -->
                    <TextBlock Margin="4"
                               VerticalAlignment="Center"
                               Text="Local version:" />
                    <TextBox VerticalAlignment="Center"
                             Text="{Binding Path=LocalVersion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                    <!-- SET LOCAL VERSION -->
                    <Button Command="{Binding Path=SetLocalVersionCommand}"
                            Content="Set" />

                    <!-- START MERGE -->
                    <Button Command="{Binding Path=MergeCommand}"
                            Content="Merge" />
                </StackPanel>

                <!-- MERGE LOG -->
                <TextBox Name="TbMergeLog"
                         Grid.Row="1"
                         Margin="4"
                         HorizontalAlignment="Stretch"
                         VerticalAlignment="Stretch"
                         IsReadOnly="True" />
            </Grid>
        </TabItem>
        <TabItem Header="Settings" />
    </TabControl>

</Window>
